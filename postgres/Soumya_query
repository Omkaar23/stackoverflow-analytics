with tag_questions as (
select df7_final."_Id", df7_final."_ParentId", df7_final."_PostTag"
from
df7_final
where df7_final."_ParentId" is NULL
and df7_final."_PostTag" = 'java'
)
, answers as (
select df7_final."_Id", df7_final."_ParentId", df7_final."_Score" , df7_final."_UserReputation"
from
df7_final
where df7_final."_ParentId" is not NULL
)

create table java_answers as 
( select
answers."_Id", answers."_ParentId", java_questions."_PostTag" , answers."_Score" , answers."_UserReputation"
from
answers
join java_questions on answers."_ParentId" = tag_questions."_Id" );


# Answer 2
with tag_questions as (
select df7_final."_Id", df7_final."_ParentId", df7_final."_PostTag"
from
df7_final
where df7_final."_ParentId" is NULL
and df7_final."_PostTag" in (SELECT df_Tags_Avg."_PostTag" FROM df_Tags_Avg)
)
, answers as (
select df7_final."_Id", df7_final."_ParentId"
from
df7_final
where df7_final."_ParentId" is not NULL
)

select
answers."_Id", answers."_ParentId", tag_questions."_PostTag" as question_tag
from
answers
join tag_questions on answers."_ParentId" = tag_questions."_Id" limit 1000;